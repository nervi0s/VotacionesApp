<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel_info.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
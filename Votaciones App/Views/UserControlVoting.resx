<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_apagar_mandos.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>